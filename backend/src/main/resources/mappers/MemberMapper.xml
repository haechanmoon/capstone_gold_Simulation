<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shinhan.backend.member.mapper.MemberMapper">

    <!-- 권한 매핑 -->
    <resultMap id="MemberAuthMap" type="com.shinhan.backend.member.domain.MemberAuth">
        <id     property="no"       column="no"/>
        <result property="memberId" column="memberId"/>
        <result property="auth"     column="auth"/>
    </resultMap>

    <!-- 회원 매핑 -->
    <resultMap id="MemberMap" type="com.shinhan.backend.member.domain.Member">
        <id     property="memberNo"        column="memberNo"/>
        <result property="memberId"        column="memberId"/>
        <result property="memberPwd"       column="memberPwd"/>
        <result property="memberName"      column="memberName"/>
        <result property="memberEmail"     column="memberEmail"/>
        <result property="memberRole"      column="memberRole"/>
        <result property="memberIsActive"  column="memberIsActive"/>
        <result property="memberCreatedAt" column="memberCreatedAt"/>
        <result property="memberUpdatedAt" column="memberUpdatedAt"/>
        <result property="memberLastLogin" column="memberLastLogin"/>
        <result property="memberDeletedAt" column="memberDeletedAt"/>

        <collection property="authList" ofType="com.shinhan.backend.member.domain.MemberAuth"
                    select="findAuthsByMemberId" column="memberId"/>
    </resultMap>

    <!-- 회원 저장 -->
    <insert id="insertMember" parameterType="com.shinhan.backend.member.domain.Member"
            useGeneratedKeys="true" keyProperty="memberNo">
        INSERT INTO MEMBERS
        (MEMBER_ID, MEMBER_PWD, MEMBER_NAME, MEMBER_EMAIL, MEMBER_ROLE, MEMBER_IS_ACTIVE,
         MEMBER_CREATED_AT, MEMBER_UPDATED_AT)
        VALUES
            (#{memberId}, #{memberPwd}, #{memberName}, #{memberEmail}, #{memberRole}, 1, NOW(), NOW())
    </insert>

    <!-- 권한 저장 -->
    <insert id="insertAuth" parameterType="com.shinhan.backend.member.domain.MemberAuth"
            useGeneratedKeys="true" keyProperty="no">
        INSERT INTO MEMBER_AUTH (MEMBER_ID, AUTH)
        VALUES (#{memberId}, #{auth})
    </insert>

    <!-- 로그인용 비번 조회 -->
    <select id="findPasswordById" parameterType="string" resultType="string">
        SELECT MEMBER_PWD
          FROM MEMBERS
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_IS_ACTIVE = 1
           AND MEMBER_DELETED_AT IS NULL
    </select>

    <!-- 단건 회원 조회: 컬럼별칭으로 카멜케이스 매핑 -->
    <select id="findById" parameterType="string" resultMap="MemberMap">
        SELECT MEMBER_NO            AS memberNo
             , MEMBER_ID            AS memberId
             , MEMBER_PWD           AS memberPwd
             , MEMBER_NAME          AS memberName
             , MEMBER_EMAIL         AS memberEmail
             , MEMBER_ROLE          AS memberRole
             , MEMBER_IS_ACTIVE     AS memberIsActive
             , MEMBER_CREATED_AT    AS memberCreatedAt
             , MEMBER_UPDATED_AT    AS memberUpdatedAt
             , MEMBER_LAST_LOGIN_AT AS memberLastLogin
             , MEMBER_DELETED_AT    AS memberDeletedAt
          FROM MEMBERS
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_IS_ACTIVE = 1
           AND MEMBER_DELETED_AT IS NULL
    </select>

    <!-- 권한 리스트 조회 -->
    <select id="findAuthsByMemberId" parameterType="string" resultMap="MemberAuthMap">
        SELECT NO         AS no
             , MEMBER_ID  AS memberId
             , AUTH       AS auth
          FROM MEMBER_AUTH
         WHERE MEMBER_ID = #{memberId}
         ORDER BY NO ASC
    </select>

    <!-- 마지막 로그인 갱신 -->
    <update id="updateLastLogin" parameterType="string">
        UPDATE MEMBERS
           SET MEMBER_LAST_LOGIN_AT = NOW()
         WHERE MEMBER_ID = #{memberId}
    </update>

    <!-- ID / 이메일 중복 체크 -->
    <select id="checkId" parameterType="string" resultType="int">
        SELECT COUNT(1)
          FROM MEMBERS
         WHERE MEMBER_ID = #{memberId}
    </select>

    <select id="checkEmail" parameterType="string" resultType="int">
        SELECT COUNT(1)
          FROM MEMBERS
         WHERE MEMBER_EMAIL = #{memberEmail}
    </select>

    <!-- 비밀번호 분실 재설정 -->
    <update id="forgotPassword">
        UPDATE MEMBERS
           SET MEMBER_PWD = #{memberPwd},
               MEMBER_UPDATED_AT = NOW()
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_EMAIL = #{memberEmail}
    </update>

    <!-- 현재 비번 조회 -->
    <select id="selectPassword" resultType="string">
        SELECT MEMBER_PWD
          FROM MEMBERS
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_IS_ACTIVE = 1
           AND MEMBER_DELETED_AT IS NULL
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePassword">
        UPDATE MEMBERS
           SET MEMBER_PWD = #{newPwd},
               MEMBER_UPDATED_AT = NOW()
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_PWD = #{oldPwd}
    </update>

    <!-- 회원 탈퇴 -->
    <update id="deleteMember">
        UPDATE MEMBERS
           SET MEMBER_IS_ACTIVE = 0,
               MEMBER_DELETED_AT = NOW(),
               MEMBER_UPDATED_AT = NOW()
         WHERE MEMBER_ID = #{memberId}
           AND MEMBER_PWD = #{memberPwd}
    </update>

</mapper>
